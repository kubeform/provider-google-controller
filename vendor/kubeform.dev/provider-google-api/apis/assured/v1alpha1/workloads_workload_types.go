/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/apimachinery/api/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	kmapi "kmodules.xyz/client-go/api/v1"
	"sigs.k8s.io/cli-utils/pkg/kstatus/status"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type WorkloadsWorkload struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              WorkloadsWorkloadSpec   `json:"spec,omitempty"`
	Status            WorkloadsWorkloadStatus `json:"status,omitempty"`
}

type WorkloadsWorkloadSpecKmsSettings struct {
	// Required. Input only. Immutable. The time at which the Key Management Service will automatically create a new version of the crypto key and mark it as the primary.
	NextRotationTime *string `json:"nextRotationTime" tf:"next_rotation_time"`
	// Required. Input only. Immutable. will be advanced by this period when the Key Management Service automatically rotates a key. Must be at least 24 hours and at most 876,000 hours.
	RotationPeriod *string `json:"rotationPeriod" tf:"rotation_period"`
}

type WorkloadsWorkloadSpecResourceSettings struct {
	// Resource identifier. For a project this represents project_number. If the project is already taken, the workload creation will fail.
	// +optional
	ResourceID *string `json:"resourceID,omitempty" tf:"resource_id"`
	// Indicates the type of resource. This field should be specified to correspond the id to the right project type (CONSUMER_PROJECT or ENCRYPTION_KEYS_PROJECT) Possible values: RESOURCE_TYPE_UNSPECIFIED, CONSUMER_PROJECT, ENCRYPTION_KEYS_PROJECT, KEYRING, CONSUMER_FOLDER
	// +optional
	ResourceType *string `json:"resourceType,omitempty" tf:"resource_type"`
}

type WorkloadsWorkloadSpecResources struct {
	// Resource identifier. For a project this represents project_number.
	// +optional
	ResourceID *int64 `json:"resourceID,omitempty" tf:"resource_id"`
	// Indicates the type of resource. Possible values: RESOURCE_TYPE_UNSPECIFIED, CONSUMER_PROJECT, ENCRYPTION_KEYS_PROJECT, KEYRING, CONSUMER_FOLDER
	// +optional
	ResourceType *string `json:"resourceType,omitempty" tf:"resource_type"`
}

type WorkloadsWorkloadSpec struct {
	State *WorkloadsWorkloadSpecResource `json:"state,omitempty" tf:"-"`

	Resource WorkloadsWorkloadSpecResource `json:"resource" tf:"resource"`

	UpdatePolicy base.UpdatePolicy `json:"updatePolicy,omitempty" tf:"-"`

	TerminationPolicy base.TerminationPolicy `json:"terminationPolicy,omitempty" tf:"-"`

	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`

	BackendRef *core.LocalObjectReference `json:"backendRef,omitempty" tf:"-"`
}

type WorkloadsWorkloadSpecResource struct {
	Timeouts *base.ResourceTimeout `json:"timeouts,omitempty" tf:"timeouts"`

	ID string `json:"id,omitempty" tf:"id,omitempty"`

	// Required. Input only. The billing account used for the resources which are direct children of workload. This billing account is initially associated with the resources created as part of Workload creation. After the initial creation of these resources, the customer can change the assigned billing account. The resource name has the form `billingAccounts/{billing_account_id}`. For example, 'billingAccounts/012345-567890-ABCDEF`.
	BillingAccount *string `json:"billingAccount" tf:"billing_account"`
	// Required. Immutable. Compliance Regime associated with this workload. Possible values: COMPLIANCE_REGIME_UNSPECIFIED, IL4, CJIS, FEDRAMP_HIGH, FEDRAMP_MODERATE, US_REGIONAL_ACCESS
	ComplianceRegime *string `json:"complianceRegime" tf:"compliance_regime"`
	// Output only. Immutable. The Workload creation timestamp.
	// +optional
	CreateTime *string `json:"createTime,omitempty" tf:"create_time"`
	// Required. The user-assigned display name of the Workload. When present it must be between 4 to 30 characters. Allowed characters are: lowercase and uppercase letters, numbers, hyphen, and spaces. Example: My Workload
	DisplayName *string `json:"displayName" tf:"display_name"`
	// Input only. Settings used to create a CMEK crypto key. When set a project with a KMS CMEK key is provisioned. This field is mandatory for a subset of Compliance Regimes.
	// +optional
	KmsSettings *WorkloadsWorkloadSpecKmsSettings `json:"kmsSettings,omitempty" tf:"kms_settings"`
	// Optional. Labels applied to the workload.
	// +optional
	Labels *map[string]string `json:"labels,omitempty" tf:"labels"`
	// The location for the resource
	Location *string `json:"location" tf:"location"`
	// Output only. The resource name of the workload.
	// +optional
	Name *string `json:"name,omitempty" tf:"name"`
	// The organization for the resource
	Organization *string `json:"organization" tf:"organization"`
	// Input only. The parent resource for the resources managed by this Assured Workload. May be either an organization or a folder. Must be the same or a child of the Workload parent. If not specified all resources are created under the Workload parent. Formats: folders/{folder_id}, organizations/{organization_id}
	// +optional
	ProvisionedResourcesParent *string `json:"provisionedResourcesParent,omitempty" tf:"provisioned_resources_parent"`
	// Input only. Resource properties that are used to customize workload resources. These properties (such as custom project id) will be used to create workload resources if possible. This field is optional.
	// +optional
	ResourceSettings []WorkloadsWorkloadSpecResourceSettings `json:"resourceSettings,omitempty" tf:"resource_settings"`
	// Output only. The resources associated with this workload. These resources will be created when creating the workload. If any of the projects already exist, the workload creation will fail. Always read only.
	// +optional
	Resources []WorkloadsWorkloadSpecResources `json:"resources,omitempty" tf:"resources"`
}

type WorkloadsWorkloadStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Phase status.Status `json:"phase,omitempty"`
	// +optional
	Conditions []kmapi.Condition `json:"conditions,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// WorkloadsWorkloadList is a list of WorkloadsWorkloads
type WorkloadsWorkloadList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of WorkloadsWorkload CRD objects
	Items []WorkloadsWorkload `json:"items,omitempty"`
}
