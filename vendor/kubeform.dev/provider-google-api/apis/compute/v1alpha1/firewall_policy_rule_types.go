/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/apimachinery/api/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	kmapi "kmodules.xyz/client-go/api/v1"
	"sigs.k8s.io/cli-utils/pkg/kstatus/status"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type FirewallPolicyRule struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              FirewallPolicyRuleSpec   `json:"spec,omitempty"`
	Status            FirewallPolicyRuleStatus `json:"status,omitempty"`
}

type FirewallPolicyRuleSpecMatchLayer4Configs struct {
	// The IP protocol to which this rule applies. The protocol type is required when creating a firewall rule. This value can either be one of the following well known protocol strings (`tcp`, `udp`, `icmp`, `esp`, `ah`, `ipip`, `sctp`), or the IP protocol number.
	IpProtocol *string `json:"ipProtocol" tf:"ip_protocol"`
	// An optional list of ports to which this rule applies. This field is only applicable for UDP or TCP protocol. Each entry must be either an integer or a range. If not specified, this rule applies to connections through any port. Example inputs include: ``.
	// +optional
	Ports []string `json:"ports,omitempty" tf:"ports"`
}

type FirewallPolicyRuleSpecMatch struct {
	// CIDR IP address range. Maximum number of destination CIDR IP ranges allowed is 256.
	// +optional
	DestIPRanges []string `json:"destIPRanges,omitempty" tf:"dest_ip_ranges"`
	// Pairs of IP protocols and ports that the rule should match.
	Layer4Configs []FirewallPolicyRuleSpecMatchLayer4Configs `json:"layer4Configs" tf:"layer4_configs"`
	// CIDR IP address range. Maximum number of source CIDR IP ranges allowed is 256.
	// +optional
	SrcIPRanges []string `json:"srcIPRanges,omitempty" tf:"src_ip_ranges"`
}

type FirewallPolicyRuleSpec struct {
	State *FirewallPolicyRuleSpecResource `json:"state,omitempty" tf:"-"`

	Resource FirewallPolicyRuleSpecResource `json:"resource" tf:"resource"`

	UpdatePolicy base.UpdatePolicy `json:"updatePolicy,omitempty" tf:"-"`

	TerminationPolicy base.TerminationPolicy `json:"terminationPolicy,omitempty" tf:"-"`

	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`

	BackendRef *core.LocalObjectReference `json:"backendRef,omitempty" tf:"-"`
}

type FirewallPolicyRuleSpecResource struct {
	Timeouts *base.ResourceTimeout `json:"timeouts,omitempty" tf:"timeouts"`

	ID string `json:"id,omitempty" tf:"id,omitempty"`

	// The Action to perform when the client connection triggers the rule. Can currently be either "allow" or "deny()" where valid values for status are 403, 404, and 502.
	Action *string `json:"action" tf:"action"`
	// An optional description for this resource.
	// +optional
	Description *string `json:"description,omitempty" tf:"description"`
	// The direction in which this rule applies. Possible values: INGRESS, EGRESS
	Direction *string `json:"direction" tf:"direction"`
	// Denotes whether the firewall policy rule is disabled. When set to true, the firewall policy rule is not enforced and traffic behaves as if it did not exist. If this is unspecified, the firewall policy rule will be enabled.
	// +optional
	Disabled *bool `json:"disabled,omitempty" tf:"disabled"`
	// Denotes whether to enable logging for a particular rule. If logging is enabled, logs will be exported to the configured export destination in Stackdriver. Logs may be exported to BigQuery or Pub/Sub. Note: you cannot enable logging on "goto_next" rules.
	// +optional
	EnableLogging *bool `json:"enableLogging,omitempty" tf:"enable_logging"`
	// The firewall policy of the resource.
	FirewallPolicy *string `json:"firewallPolicy" tf:"firewall_policy"`
	// Type of the resource. Always `compute#firewallPolicyRule` for firewall policy rules
	// +optional
	Kind *string `json:"kind,omitempty" tf:"kind"`
	// A match condition that incoming traffic is evaluated against. If it evaluates to true, the corresponding 'action' is enforced.
	Match *FirewallPolicyRuleSpecMatch `json:"match" tf:"match"`
	// An integer indicating the priority of a rule in the list. The priority must be a positive value between 0 and 2147483647. Rules are evaluated from highest to lowest priority where 0 is the highest priority and 2147483647 is the lowest prority.
	Priority *int64 `json:"priority" tf:"priority"`
	// Calculation of the complexity of a single firewall policy rule.
	// +optional
	RuleTupleCount *int64 `json:"ruleTupleCount,omitempty" tf:"rule_tuple_count"`
	// A list of network resource URLs to which this rule applies. This field allows you to control which network's VMs get this rule. If this field is left blank, all VMs within the organization will receive the rule.
	// +optional
	TargetResources []string `json:"targetResources,omitempty" tf:"target_resources"`
	// A list of service accounts indicating the sets of instances that are applied with this rule.
	// +optional
	TargetServiceAccounts []string `json:"targetServiceAccounts,omitempty" tf:"target_service_accounts"`
}

type FirewallPolicyRuleStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Phase status.Status `json:"phase,omitempty"`
	// +optional
	Conditions []kmapi.Condition `json:"conditions,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// FirewallPolicyRuleList is a list of FirewallPolicyRules
type FirewallPolicyRuleList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of FirewallPolicyRule CRD objects
	Items []FirewallPolicyRule `json:"items,omitempty"`
}
