/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/apimachinery/api/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	kmapi "kmodules.xyz/client-go/api/v1"
	"sigs.k8s.io/cli-utils/pkg/kstatus/status"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type ServiceAttachment struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              ServiceAttachmentSpec   `json:"spec,omitempty"`
	Status            ServiceAttachmentStatus `json:"status,omitempty"`
}

type ServiceAttachmentSpecConnectedEndpoints struct {
	// The URL of the consumer forwarding rule.
	// +optional
	Endpoint *string `json:"endpoint,omitempty" tf:"endpoint"`
	// The status of the connection from the consumer forwarding rule to
	// this service attachment.
	// +optional
	Status *string `json:"status,omitempty" tf:"status"`
}

type ServiceAttachmentSpecConsumerAcceptLists struct {
	// The number of consumer forwarding rules the consumer project can
	// create.
	ConnectionLimit *int64 `json:"connectionLimit" tf:"connection_limit"`
	// A project that is allowed to connect to this service attachment.
	ProjectIDOrNum *string `json:"projectIDOrNum" tf:"project_id_or_num"`
}

type ServiceAttachmentSpec struct {
	State *ServiceAttachmentSpecResource `json:"state,omitempty" tf:"-"`

	Resource ServiceAttachmentSpecResource `json:"resource" tf:"resource"`

	UpdatePolicy base.UpdatePolicy `json:"updatePolicy,omitempty" tf:"-"`

	TerminationPolicy base.TerminationPolicy `json:"terminationPolicy,omitempty" tf:"-"`

	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`

	BackendRef *core.LocalObjectReference `json:"backendRef,omitempty" tf:"-"`
}

type ServiceAttachmentSpecResource struct {
	Timeouts *base.ResourceTimeout `json:"timeouts,omitempty" tf:"timeouts"`

	ID string `json:"id,omitempty" tf:"id,omitempty"`

	// An array of the consumer forwarding rules connected to this service
	// attachment.
	// +optional
	ConnectedEndpoints []ServiceAttachmentSpecConnectedEndpoints `json:"connectedEndpoints,omitempty" tf:"connected_endpoints"`
	// The connection preference to use for this service attachment. Valid
	// values include "ACCEPT_AUTOMATIC", "ACCEPT_MANUAL".
	ConnectionPreference *string `json:"connectionPreference" tf:"connection_preference"`
	// An array of projects that are allowed to connect to this service
	// attachment.
	// +optional
	ConsumerAcceptLists []ServiceAttachmentSpecConsumerAcceptLists `json:"consumerAcceptLists,omitempty" tf:"consumer_accept_lists"`
	// An array of projects that are not allowed to connect to this service
	// attachment.
	// +optional
	ConsumerRejectLists []string `json:"consumerRejectLists,omitempty" tf:"consumer_reject_lists"`
	// An optional description of this resource.
	// +optional
	Description *string `json:"description,omitempty" tf:"description"`
	// If true, enable the proxy protocol which is for supplying client TCP/IP
	// address data in TCP connections that traverse proxies on their way to
	// destination servers.
	EnableProxyProtocol *bool `json:"enableProxyProtocol" tf:"enable_proxy_protocol"`
	// Fingerprint of this resource. This field is used internally during
	// updates of this resource.
	// +optional
	Fingerprint *string `json:"fingerprint,omitempty" tf:"fingerprint"`
	// Name of the resource. The name must be 1-63 characters long, and
	// comply with RFC1035. Specifically, the name must be 1-63 characters
	// long and match the regular expression '[a-z]([-a-z0-9]*[a-z0-9])?'
	// which means the first character must be a lowercase letter, and all
	// following characters must be a dash, lowercase letter, or digit,
	// except the last character, which cannot be a dash.
	Name *string `json:"name" tf:"name"`
	// An array of subnets that is provided for NAT in this service attachment.
	NatSubnets []string `json:"natSubnets" tf:"nat_subnets"`
	// +optional
	Project *string `json:"project,omitempty" tf:"project"`
	// URL of the region where the resource resides.
	// +optional
	Region *string `json:"region,omitempty" tf:"region"`
	// +optional
	SelfLink *string `json:"selfLink,omitempty" tf:"self_link"`
	// The URL of a forwarding rule that represents the service identified by
	// this service attachment.
	TargetService *string `json:"targetService" tf:"target_service"`
}

type ServiceAttachmentStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Phase status.Status `json:"phase,omitempty"`
	// +optional
	Conditions []kmapi.Condition `json:"conditions,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// ServiceAttachmentList is a list of ServiceAttachments
type ServiceAttachmentList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of ServiceAttachment CRD objects
	Items []ServiceAttachment `json:"items,omitempty"`
}
