/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/apimachinery/api/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	kmapi "kmodules.xyz/client-go/api/v1"
	"sigs.k8s.io/cli-utils/pkg/kstatus/status"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type ServicesEdgeCacheKeyset struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              ServicesEdgeCacheKeysetSpec   `json:"spec,omitempty"`
	Status            ServicesEdgeCacheKeysetStatus `json:"status,omitempty"`
}

type ServicesEdgeCacheKeysetSpecPublicKey struct {
	// The ID of the public key. The ID must be 1-63 characters long, and comply with RFC1035.
	// The name must be 1-64 characters long, and match the regular expression [a-zA-Z][a-zA-Z0-9_-]*
	// which means the first character must be a letter, and all following characters must be a dash, underscore, letter or digit.
	ID *string `json:"ID" tf:"id"`
	// The base64-encoded value of the Ed25519 public key. The base64 encoding can be padded (44 bytes) or unpadded (43 bytes).
	// Representations or encodings of the public key other than this will be rejected with an error.
	Value *string `json:"-" sensitive:"true" tf:"value"`
}

type ServicesEdgeCacheKeysetSpec struct {
	State *ServicesEdgeCacheKeysetSpecResource `json:"state,omitempty" tf:"-"`

	Resource ServicesEdgeCacheKeysetSpecResource `json:"resource" tf:"resource"`

	UpdatePolicy base.UpdatePolicy `json:"updatePolicy,omitempty" tf:"-"`

	TerminationPolicy base.TerminationPolicy `json:"terminationPolicy,omitempty" tf:"-"`

	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`

	SecretRef *core.LocalObjectReference `json:"secretRef,omitempty" tf:"-"`

	BackendRef *core.LocalObjectReference `json:"backendRef,omitempty" tf:"-"`
}

type ServicesEdgeCacheKeysetSpecResource struct {
	Timeouts *base.ResourceTimeout `json:"timeouts,omitempty" tf:"timeouts"`

	ID string `json:"id,omitempty" tf:"id,omitempty"`

	// A human-readable description of the resource.
	// +optional
	Description *string `json:"description,omitempty" tf:"description"`
	// Set of label tags associated with the EdgeCache resource.
	// +optional
	Labels *map[string]string `json:"labels,omitempty" tf:"labels"`
	// Name of the resource; provided by the client when the resource is created.
	// The name must be 1-64 characters long, and match the regular expression [a-zA-Z][a-zA-Z0-9_-]* which means the first character must be a letter,
	// and all following characters must be a dash, underscore, letter or digit.
	Name *string `json:"name" tf:"name"`
	// +optional
	Project *string `json:"project,omitempty" tf:"project"`
	// An ordered list of Ed25519 public keys to use for validating signed requests.
	// You must specify at least one (1) key, and may have up to three (3) keys.
	//
	// Ed25519 public keys are not secret, and only allow Google to validate a request was signed by your corresponding private key.
	// You should ensure that the private key is kept secret, and that only authorized users can add public keys to a keyset.
	// +kubebuilder:validation:MaxItems=3
	// +kubebuilder:validation:MinItems=1
	PublicKey []ServicesEdgeCacheKeysetSpecPublicKey `json:"publicKey" tf:"public_key"`
}

type ServicesEdgeCacheKeysetStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Phase status.Status `json:"phase,omitempty"`
	// +optional
	Conditions []kmapi.Condition `json:"conditions,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// ServicesEdgeCacheKeysetList is a list of ServicesEdgeCacheKeysets
type ServicesEdgeCacheKeysetList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of ServicesEdgeCacheKeyset CRD objects
	Items []ServicesEdgeCacheKeyset `json:"items,omitempty"`
}
